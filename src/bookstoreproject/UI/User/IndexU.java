/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bookstoreproject.UI.User;

import bookstoreproject.DAO.BookDAO;
import bookstoreproject.MODAL.BookDetail;
import bookstoreproject.MODAL.User;
import bookstoreproject.DAO.Connect;
import bookstoreproject.DAO.UserDAO;
import java.awt.List;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Dictionary;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

//////////////////iText - ---- pdf library open source
//import com.itextpdf.text.Document;
//import com.itextpdf.text.Paragraph;
//import com.itextpdf.text.pdf.PdfWriter;

import java.io.FileOutputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Enumeration;
/**
 *
 * @author Acer
 */
public class IndexU extends javax.swing.JFrame {
    private User UserInstance;
    private ArrayList<BookDetail> ListBookDetail = new ArrayList<BookDetail>();
    private BookDetail currentBookDetail;
    private int currentNumberOfBook;
    private String CurrentIdCoupon = "";
    private Dictionary<BookDetail,Integer> Dic = new Hashtable<>();
    /*@param UserInstance */
    public IndexU(User UserInstance) {
        initComponents();
        this.UserInstance = UserInstance;
        setSize(730, 520);
        setResizable(false);
        setLocationRelativeTo(null);
        //config hiện tên người dùng
        if(this.UserInstance.getFullName().equals(""))
        {
            lbUser.setText(this.UserInstance.getUserName());
        }
        else
        {
            lbUser.setText(this.UserInstance.getFullName());
        }
        //config hiện tên người dùng
        loadBooktable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbUser = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        btnCart = new javax.swing.JButton();
        TabPanel = new javax.swing.JTabbedPane();
        HomePanel = new javax.swing.JPanel();
        txtSearchH = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBooktable = new javax.swing.JTable();
        btnBuyH = new javax.swing.JButton();
        btnSearchH = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtSoLuongH = new javax.swing.JTextField();
        ProfilePanel = new javax.swing.JPanel();
        txtSdt = new javax.swing.JTextField();
        btnSaveP = new javax.swing.JButton();
        btnEditP = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtHoTenP = new javax.swing.JTextField();
        txtAddressP = new javax.swing.JTextField();
        CartPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPhiVanChuyen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCoupon = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtThanhTien = new javax.swing.JTextField();
        btnThanhToan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        btnRemoveCart = new javax.swing.JButton();
        btnApplyCoupon = new javax.swing.JButton();
        PaymentHistory = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnThanhToan1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1080, 720));
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbUser.setForeground(new java.awt.Color(255, 51, 51));
        lbUser.setText("UserName");
        lbUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbUserMouseClicked(evt);
            }
        });

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnCart.setText("Cart");
        btnCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbUser)
                .addGap(40, 40, 40)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnCart, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(428, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUser)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCart, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 783, 123);

        jPanel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblBooktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BookName", "TacGia", "Price", "TonKho", "GioiThieu"
            }
        ));
        tblBooktable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBooktableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBooktable);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        btnBuyH.setText("Mua Ngay");
        btnBuyH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyHActionPerformed(evt);
            }
        });

        btnSearchH.setText("Search");
        btnSearchH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchHActionPerformed(evt);
            }
        });

        jLabel8.setText("Số lượng");

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addComponent(txtSearchH, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearchH))
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBuyH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSoLuongH))))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoLuongH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(28, 28, 28)
                        .addComponent(btnBuyH)
                        .addGap(0, 108, Short.MAX_VALUE))
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        TabPanel.addTab("Home", HomePanel);

        ProfilePanel.setLayout(null);

        txtSdt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ProfilePanel.add(txtSdt);
        txtSdt.setBounds(140, 100, 402, 31);

        btnSaveP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSaveP.setText("Save");
        btnSaveP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePActionPerformed(evt);
            }
        });
        ProfilePanel.add(btnSaveP);
        btnSaveP.setBounds(380, 190, 72, 32);

        btnEditP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnEditP.setText("Edit");
        btnEditP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPActionPerformed(evt);
            }
        });
        ProfilePanel.add(btnEditP);
        btnEditP.setBounds(470, 190, 72, 32);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setText("Thông Tin Cá Nhân:");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ProfilePanel.add(jLabel1);
        jLabel1.setBounds(6, 11, 225, 34);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Họ và tên: ");
        ProfilePanel.add(jLabel5);
        jLabel5.setBounds(40, 60, 93, 25);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Địa chỉ:");
        ProfilePanel.add(jLabel6);
        jLabel6.setBounds(70, 140, 63, 25);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Số điện thoại:");
        ProfilePanel.add(jLabel9);
        jLabel9.setBounds(12, 100, 117, 25);

        txtHoTenP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ProfilePanel.add(txtHoTenP);
        txtHoTenP.setBounds(138, 57, 402, 31);

        txtAddressP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ProfilePanel.add(txtAddressP);
        txtAddressP.setBounds(140, 140, 402, 31);

        TabPanel.addTab("Profile", ProfilePanel);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Tổng Tiền:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Phí vận chuyển:");

        txtPhiVanChuyen.setText("25000");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Coupon: ");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 51, 51));
        jLabel10.setText(" Thành Tiền: ");

        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Tên Sách", "Giá bán", "Số Lượng"
            }
        ));
        jScrollPane2.setViewportView(tblCart);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        btnRemoveCart.setText("Remove");
        btnRemoveCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCartActionPerformed(evt);
            }
        });

        btnApplyCoupon.setText("Apply");
        btnApplyCoupon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyCouponActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CartPanelLayout = new javax.swing.GroupLayout(CartPanel);
        CartPanel.setLayout(CartPanelLayout);
        CartPanelLayout.setHorizontalGroup(
            CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CartPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CartPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveCart)
                            .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnApplyCoupon)
                                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(CartPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCoupon))
                                    .addGroup(CartPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPhiVanChuyen))
                                    .addGroup(CartPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(CartPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtThanhTien)))))))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        CartPanelLayout.setVerticalGroup(
            CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CartPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnRemoveCart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPhiVanChuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCoupon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApplyCoupon)
                .addGap(18, 18, 18)
                .addGroup(CartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnThanhToan))
            .addGroup(CartPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabPanel.addTab("Cart", CartPanel);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );

        btnThanhToan1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThanhToan1.setText("Xem Chi Tiết");

        javax.swing.GroupLayout PaymentHistoryLayout = new javax.swing.GroupLayout(PaymentHistory);
        PaymentHistory.setLayout(PaymentHistoryLayout);
        PaymentHistoryLayout.setHorizontalGroup(
            PaymentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 777, Short.MAX_VALUE)
            .addGroup(PaymentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PaymentHistoryLayout.createSequentialGroup()
                    .addGap(45, 45, 45)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                    .addComponent(btnThanhToan1)
                    .addGap(45, 45, 45)))
        );
        PaymentHistoryLayout.setVerticalGroup(
            PaymentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 295, Short.MAX_VALUE)
            .addGroup(PaymentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PaymentHistoryLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(PaymentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PaymentHistoryLayout.createSequentialGroup()
                            .addGap(100, 100, 100)
                            .addComponent(btnThanhToan1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );

        TabPanel.addTab("Payment History", PaymentHistory);

        getContentPane().add(TabPanel);
        TabPanel.setBounds(0, 82, 777, 330);

        jMenu1.setText("File");

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbUserMouseClicked
        // TODO add your handling code here:
        TabPanel.setSelectedComponent(ProfilePanel);
        showProfilePanel();
        
    }//GEN-LAST:event_lbUserMouseClicked

    private void btnEditPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPActionPerformed
        // TODO add your handling code here:
        btnSaveP.setVisible(true);
        txtHoTenP.setEnabled(true);
        txtAddressP.setEnabled(true);
        txtSdt.setEnabled(true);
    }//GEN-LAST:event_btnEditPActionPerformed

    private void btnSavePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePActionPerformed
        // TODO add your handling code here:
        try {
            /////Validation
            String validation = "";
            //
            if (txtHoTenP.getText().isEmpty() || txtAddressP.getText().isEmpty() || txtSdt.getText().isEmpty()) {
                if (txtHoTenP.getText().isEmpty()) {
                    validation += "Họ tên must be fill ";
                }
                if (txtAddressP.getText().isEmpty()) {
                    validation += "- Address must be fill ";
                }
                if (txtSdt.getText().isEmpty()) {
                    validation += "- Phone Number must be fill ";
                }
                JOptionPane.showMessageDialog(null, validation, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            ////////////////////PhoneNumber validation - only number
            if (!txtSdt.getText().matches("\\d+")) {
                JOptionPane.showMessageDialog(null, "Phone number must only contain number", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            ////Validation
            User temp = new User();
            temp.setFullName(txtHoTenP.getText());
            temp.setUserAddress(txtAddressP.getText());
            temp.setPhoneNumber(txtSdt.getText());

            Boolean isEdit = UserDAO.EditProfile(UserInstance, temp);
            if (isEdit) {

                this.UserInstance.setFullName(txtHoTenP.getText());
                this.UserInstance.setUserAddress(txtAddressP.getText());
                this.UserInstance.setPhoneNumber(txtSdt.getText());
                lbUser.setText(this.UserInstance.getFullName());
                JOptionPane.showMessageDialog(null, "Edited successful", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        //End config
        btnSaveP.setVisible(false);
        txtHoTenP.setEnabled(false);
        txtAddressP.setEnabled(false);
        txtSdt.setEnabled(false);
        //End config
    }//GEN-LAST:event_btnSavePActionPerformed

    private void tblBooktableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBooktableMouseClicked
       DefaultTableModel model = (DefaultTableModel)tblBooktable.getModel();
       int rowselected = tblBooktable.getSelectedRow();
       BookDetail temp = new BookDetail();
       temp.setAuthorId(ListBookDetail.get(rowselected).getAuthorId());
       temp.setBookId(ListBookDetail.get(rowselected).getBookId());
       currentBookDetail = temp;
       currentNumberOfBook = Integer.parseInt(model.getValueAt(rowselected, 3).toString());
    }//GEN-LAST:event_tblBooktableMouseClicked

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        TabPanel.setSelectedComponent(HomePanel);
        loadBooktable();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnBuyHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyHActionPerformed
        // TODO add your handling code here:
       if(Integer.parseInt(txtSoLuongH.getText()) > currentNumberOfBook)
       {
           JOptionPane.showMessageDialog(null, "Trong kho khong co du sach");
           return;
       }
        
         if(Dic.get(currentBookDetail)== null)
            Dic.put(currentBookDetail, Integer.parseInt(txtSoLuongH.getText()));
        else
        {
            int soluong = Dic.get(currentBookDetail);
            soluong+=Integer.parseInt(txtSoLuongH.getText());
            Dic.put(currentBookDetail, soluong);
        }

        
       JOptionPane.showMessageDialog(null, "Đã thêm vào giỏ hàng","Thông báo",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnBuyHActionPerformed

    private void btnCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCartActionPerformed
        // TODO add your handling code here:
        TabPanel.setSelectedComponent(CartPanel);
        txtTongTien.setEnabled(false);
        txtPhiVanChuyen.setEnabled(false);
        txtThanhTien.setEnabled(false);
        loadCartPanel();
    }//GEN-LAST:event_btnCartActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        
        /*
        Document document = new Document();
        try {
            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            PdfWriter.getInstance(document, new FileOutputStream("../PdfStorage/" + UserInstance.getUserId()+"_"+dtf.format(now)));
            document.open();
            document.add(new Paragraph("Hello World!"));
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            document.close();
        }
        */
        try{
            DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
            Connect sqlinstance = new Connect();
            sqlinstance.Connect();
            Statement state = sqlinstance.conn.createStatement();
            
            //////////////////////////////// Tạo Hóa ĐƠn
            
            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
            ////Tự động tìm mã hóa đơn trống để add
            // Get all existing IDs
            String IdQuery = "select IdHoaDon from HoaDon order by IdHoaDon;";
            ResultSet idResult = state.executeQuery(IdQuery);
            
            // Find the first missing ID
            int expectedId = 1;
            while(idResult.next()){
                    String currentId = idResult.getString("IdHoaDon").substring(1); // Remove 'C' prefix
                    int currentIdNumber = Integer.parseInt(currentId);
                    if(currentIdNumber != expectedId){
                        break;
                     }
                    expectedId++;
            }
            if(txtCoupon.getText().isEmpty())
            {
                 String findCoupon = "Select * from Coupon where CouponName = N'"
                    + "None" +"';";
                 ResultSet coupon = state.executeQuery(findCoupon);
                 coupon.next();
                 CurrentIdCoupon = coupon.getString("CouponId");
            }
            ///Begin add HoaDon
            String ExpectedId = "H"+expectedId;
            String InsertQuery = "insert into HoaDon values('"
                    +ExpectedId
                    +"','"
                    +UserInstance.getUserId()
                    +"',"
                    +Long.parseLong(txtThanhTien.getText())
                    +",'"
                    + dtf.format(now)
                    +"','"
                    +CurrentIdCoupon
                    +"');";
                    
            
           
            int row = state.executeUpdate(InsertQuery);
            if(row != 0)
            {
                JOptionPane.showMessageDialog(null, "Tạo Hóa đơn thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                ////////////// Khi đã tạo hóa đơn rồi thì chỉ cần tạo các chi tiết hóa đơn
                for (int i = 0; i < tblCart.getRowCount(); i++) {
                    //////Lấy thông tin
                    String BookId = model.getValueAt(i,0).toString();
                    int Soluong = Integer.parseInt(model.getValueAt(i, 3).toString());
                    //////
                String InsertChiTietHoaDon = "insert into ChiTietHoaDon values('"
                    +ExpectedId
                    +"','"
                    + BookId
                    +"',"
                    +Soluong
                    +");";
                int rowChitiet = state.executeUpdate(InsertChiTietHoaDon);
          
                ///////////////////Xử lí sau khi add thành công chi tiết hóa đơn
                if(rowChitiet != 0)
                {
                   
                     BookDAO.updateDbAfterBuyBook(BookId,Soluong);
                     
                }           
                }
            }
            else
            {
              JOptionPane.showMessageDialog(null, "Tạo Hóa đơn không thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            }
            sqlinstance.conn.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }    
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnApplyCouponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyCouponActionPerformed
        // TODO add your handling code here:
        if(Dic.isEmpty())
            return;
        try
        {
            Connect sqlinstance = new Connect();
            sqlinstance.Connect();
            Statement state = sqlinstance.conn.createStatement();
            
            String findCoupon = "Select * from Coupon where CouponName = N'"
                    + txtCoupon.getText() +"';";
            ResultSet coupon = state.executeQuery(findCoupon);
            if(coupon.next())
            {
                int OldThanhTien = Integer.parseInt(txtThanhTien.getText());
                float soTienGiam =   OldThanhTien * Float.parseFloat(coupon.getString("Discount"));
                int newTongTien = OldThanhTien - (int)soTienGiam;
                CurrentIdCoupon = coupon.getString("CouponId");
                txtThanhTien.setText(Integer.toString(newTongTien));
                JOptionPane.showMessageDialog(null, "You have applied Coupon","Thông báo",JOptionPane.INFORMATION_MESSAGE);
                sqlinstance.conn.close(); 
            }
            else
            {
                sqlinstance.conn.close(); 
                JOptionPane.showMessageDialog(null, "Coupon is not Exist","Thông báo",JOptionPane.INFORMATION_MESSAGE);

            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnApplyCouponActionPerformed

    private void btnRemoveCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCartActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        try
        {
            Connect sqlinstane = new Connect();
            sqlinstane.Connect();
            Statement state = sqlinstane.conn.createStatement();
            String selectBookDetail = "Select * from BookDetail where BookId = '"
                    + model.getValueAt(tblCart.getSelectedRow(), 0) + "';";
            ResultSet set = state.executeQuery(selectBookDetail);
            while(set.next())
            {
                BookDetail temp = new BookDetail();
                temp.setAuthorId(set.getString("AuthorId"));
                temp.setBookId(set.getString("BookId"));
                if(Dic.get(temp) != null)
                {
                    Dic.remove(temp);
                    JOptionPane.showMessageDialog(null, "Xóa khỏi Cart thành công","Thông báo",JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
            loadCartPanel();
            sqlinstane.conn.close();
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnRemoveCartActionPerformed

    private void btnSearchHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchHActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblBooktable.getModel();
        model.setRowCount(0);
        try
        {
            Connect sqlinstance = new Connect();
            sqlinstance.Connect();
            Statement stateget = sqlinstance.conn.createStatement();
            String SelectQueryAll = "select BookId, BookName, CategoryName, Price, GioiThieu " +
             "from Book, Category " +
             "where Book.CategoryId = Category.CategoryId " +
             "and (Book.BookId = '" + txtSearchH.getText() + "' " +
             "or Book.BookName = N'" + txtSearchH.getText() + "' " +
             "or CategoryName =N'" + txtSearchH.getText() + "')";
            
                               
            ResultSet BookResult = stateget.executeQuery(SelectQueryAll);
            while(BookResult.next())
            {
                model.addRow(new Object[]{BookResult.getString("BookId"),BookResult.getString("BookName"),BookResult.getString("CategoryName"),BookResult.getString("Price"),BookResult.getString("GioiThieu")});
            }
            
            sqlinstance.conn.close();
        }catch(Exception e)
        {
            
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchHActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_miExitActionPerformed
       public void showProfilePanel()
    {
        //Start up config
        btnSaveP.setVisible(false);
        txtHoTenP.setEnabled(false);
        txtAddressP.setEnabled(false);
        txtSdt.setEnabled(false);
        //Start up config
        
        txtHoTenP.setText(UserInstance.getFullName());
        txtAddressP.setText(UserInstance.getUserAddress());
        txtSdt.setText(UserInstance.getPhoneNumber());
    }
       public final void loadCategory()
       {
           
       }
       public final void loadBooktable()
       {
           DefaultTableModel model = (DefaultTableModel) tblBooktable.getModel();
            model.setRowCount(0);
            ListBookDetail.clear();
        try
        {
            Connect sqlinstance = new Connect();
            sqlinstance.Connect();
            Statement stateget = sqlinstance.conn.createStatement();
            String SelectQueryAll = "select Book.BookId,BookName,CategoryName,Price,Book.GioiThieu,Author.AuthorId, Name as TacGia,TonKho from Book,Category,BookDetail,Author where Book.CategoryId = Category.CategoryId and Book.BookId = BookDetail.BookId and BookDetail.AuthorId = Author.AuthorId and Book.TonKho > 0";
            ResultSet BookResult = stateget.executeQuery(SelectQueryAll);
            while(BookResult.next())
            {
                model.addRow(new Object[]{BookResult.getString("BookName"),BookResult.getString("TacGia"),BookResult.getString("Price"),BookResult.getString("TonKho"),BookResult.getString("GioiThieu")});
                BookDetail book = new BookDetail();
                book.setBookId(BookResult.getString("BookId"));
                book.setAuthorId(BookResult.getString("AuthorId"));
                ListBookDetail.add(book);
                
            }
            sqlinstance.conn.close();
        }catch(Exception e)
        {
            e.printStackTrace();
        }
       }
       
       public void loadCartPanel()
       {
           tblCart.removeAll();
           if(Dic.isEmpty())
               return;
           DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
            model.setRowCount(0);
           
        try
        {
            Connect sqlinstance = new Connect();
            sqlinstance.Connect();
            Statement stateget = sqlinstance.conn.createStatement();
            int TongTien = 0;
            
            Enumeration<BookDetail> keys = Dic.keys();
            while(keys.hasMoreElements())
            {
                BookDetail key = keys.nextElement();
                int value = Dic.get(key);
                String SelectQueryAll = "Select * from Book where BookId='"
                        +key.getBookId()
                        +"';";
                ResultSet BookResult = stateget.executeQuery(SelectQueryAll);
                BookResult.next();
                TongTien+= Integer.parseInt(BookResult.getString("Price")) * value;
                model.addRow(new Object[]{BookResult.getString("BookId"),BookResult.getString("BookName"),BookResult.getString("Price"),value});
        
            }
          
            //txt
            /////////////
            txtTongTien.setText(Integer.toString(TongTien));
            int ThanhTien = TongTien + Integer.parseInt(txtPhiVanChuyen.getText());
            txtThanhTien.setText(Integer.toString(ThanhTien));
            
            ////
        
            sqlinstance.conn.close();
        }catch(Exception e)
        {
            e.printStackTrace();
        }
       }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IndexU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IndexU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IndexU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IndexU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                User user = new User();
                new IndexU(user).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CartPanel;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JPanel PaymentHistory;
    private javax.swing.JPanel ProfilePanel;
    private javax.swing.JTabbedPane TabPanel;
    private javax.swing.JButton btnApplyCoupon;
    private javax.swing.JButton btnBuyH;
    private javax.swing.JButton btnCart;
    private javax.swing.JButton btnEditP;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnRemoveCart;
    private javax.swing.JButton btnSaveP;
    private javax.swing.JButton btnSearchH;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThanhToan1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbUser;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JTable tblBooktable;
    private javax.swing.JTable tblCart;
    private javax.swing.JTextField txtAddressP;
    private javax.swing.JTextField txtCoupon;
    private javax.swing.JTextField txtHoTenP;
    private javax.swing.JTextField txtPhiVanChuyen;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtSearchH;
    private javax.swing.JTextField txtSoLuongH;
    private javax.swing.JTextField txtThanhTien;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
